diff --git a/lib/config/discover.ml b/lib/config/discover.ml
index 8ffea80..854b0d3 100644
--- a/lib/config/discover.ml
+++ b/lib/config/discover.ml
@@ -1,5 +1,20 @@
 module C = Configurator.V1
 
+let cmd_lines cmd =
+  let cin = Unix.open_process_in cmd in
+  try
+    let rec loop () =
+      match input_line cin with
+      | exception End_of_file -> []
+      | line -> line :: loop ()
+    in
+    let lines = loop () in
+    match Unix.close_process_in cin with
+    | WEXITED 0 -> lines, true
+    | WEXITED _ | WSIGNALED _ | WSTOPPED _ -> lines, false
+  with
+  | End_of_file -> [], false
+
 (* the -I and -L flags are required for freebsd, harmless elsewhere *)
 let default : C.Pkg_config.package_conf =
   { libs = [ "-L/usr/local/lib"; "-lrdkafka"; "-lpthread"; "-lz" ]
@@ -9,13 +24,27 @@ let default : C.Pkg_config.package_conf =
 let () =
   C.main ~name:"kafka" (fun c ->
       let default = default in
+      let pkg_config_exe =
+        match Sys.getenv "PKG_CONFIG" with
+        | s -> s
+        | exception Not_found -> "pkg-config"
+      in
       let conf =
         match C.Pkg_config.get c with
         | None -> default
-        | Some pc ->
-          (match C.Pkg_config.query pc ~package:"rdkafka" with
-          | Some s -> s
-          | None -> default)
+        | Some _pc ->
+          (match
+             ( cmd_lines
+                 (Format.asprintf "%s --cflags --static rdkafka" pkg_config_exe)
+             , cmd_lines
+                 (Format.asprintf "%s --libs --static rdkafka" pkg_config_exe) )
+           with
+          | ([ cflags ], true), ([ libs ], true) ->
+            Format.eprintf "yeah %s %s@." cflags libs;
+            { C.Pkg_config.cflags = String.split_on_char ' ' cflags
+            ; libs = String.split_on_char ' ' libs
+            }
+          | _, _ -> default)
       in
       C.Flags.write_sexp "c_library_flags.sexp" conf.libs;
       C.Flags.write_sexp "c_flags.sexp" conf.cflags)
